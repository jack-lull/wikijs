apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wiki.fullname" . }}
  labels:
    {{- include "wiki.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "wiki.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "wiki.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "wiki.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: delete-favicon-ico
          image: "{{ .Values.image.repository }}:{{ default "latest" .Values.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.imagePullPolicy }}
          command: sh
          args: ["-c", "ls /wiki/assets/favicon.ico && rm -rf /wiki/assets/favicon.ico/* && ls /wiki/assets/favicon.ico"]
        - name: delete-favicons
          image: "{{ .Values.image.repository }}:{{ default "latest" .Values.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.imagePullPolicy }}
          command: sh
          args: ["-c", "ls /wiki/assets/favicons && rm -rf /wiki/assets/favicons/* && ls /wiki/assets/favicons"]
        # - name: install-android-chrome-192x192-png
          # image: "curlimages/curl:latest"
          # imagePullPolicy: {{ default "IfNotPresent" .Values.image.imagePullPolicy }}
          # command:
          # - curl
          # - -k
          # - -L
          # - "https://s3.eterfund.ru/public/ximperlinuxFavicons/android-chrome-192x192.png"
          # - -o
          # - /wiki/assets/favicons/android-chrome-192x192.png
        # - name: install-favicon-32x32-png
          # image: "curlimages/curl:latest"
          # imagePullPolicy: {{ default "IfNotPresent" .Values.image.imagePullPolicy }}
          # command:
          # - curl
          # - -k
          # - -L
          # - "https://s3.eterfund.ru/public/ximperlinuxFavicons/favicon-32x32.png"
          # - -o
          # - /wiki/assets/favicons/favicon-32x32.png
        # - name: install-favicon-ico
          # image: "curlimages/curl:latest"
          # imagePullPolicy: {{ default "IfNotPresent" .Values.image.imagePullPolicy }}
          # command:
          # - curl
          # - -k
          # - -L
          # - "https://s3.eterfund.ru/public/ximperlinuxFavicons/favicon.ico"
          # - -o
          # - /wiki/assets/favicon.ico
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ default "latest" .Values.image.tag }}"
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.imagePullPolicy }}
          env:
            {{- if .Values.nodeExtraCaCerts }}
            - name: NODE_EXTRA_CA_CERTS
              value: {{ .Values.nodeExtraCaCerts }}
            {{- end }}
            - name: DB_TYPE
              value: postgres
            {{- if (.Values.externalPostgresql).databaseURL }}
            - name: DATABASE_URL
              value: {{ .Values.externalPostgresql.databaseURL }}
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: {{ default "1" .Values.externalPostgresql.NODE_TLS_REJECT_UNAUTHORIZED | quote }}
            {{- else }}
            - name: DB_HOST
              value: {{ template "wiki.postgresql.host" . }}
            - name: DB_PORT
              value: "{{ default "5432" .Values.postgresql.postgresqlPort }}"
            - name: DB_NAME
              value: {{ default "wiki" .Values.postgresql.postgresqlDatabase }}
            - name: DB_USER
              value: {{ default "wiki" .Values.postgresql.postgresqlUser }}
            - name: DB_SSL
              value: "{{ default "false" .Values.postgresql.ssl }}"
            - name: DB_SSL_CA
              value: "{{ default "" .Values.postgresql.ca }}"
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                {{- if .Values.postgresql.existingSecret }}
                  name: {{ .Values.postgresql.existingSecret }}
                {{- else }}
                  name: {{ template "wiki.postgresql.secret" . }}
                {{- end }}
                  key: {{ template "wiki.postgresql.secretKey" . }}
            {{- end }}
            - name: HA_ACTIVE
              value: {{ .Values.replicaCount | int | le 2 | quote }}
    {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
    {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
    {{- end }}
